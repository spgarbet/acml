setwd("~/Projects/schildcrout")
setwd("acml")
setwd("R")
source("parse.R")
source("acml.R")
setwd("../data")
source("GroupByTimeInteraction.rda")
load("GroupByTimeInteraction.rda")
head(GroupByTimeInteraction)
acml <- (response ~ month*race + (1|genotype), data=GroupByTimeInteraction)
acml <- function(   formula,#
                    data,#
                    sample.function,#
                    sample.cutpoints,#
                    sample.prob,#
                    sample.probi = NULL,#
                    control      = list(),#
                    start        = NULL,#
                    verbose      = FALSE,#
                    doFit        = TRUE,#
                    subset,#
                    na.action,#
                    offset,#
                    contrasts = NULL,#
                    ...)#
{#
    mc <- match.call()#
#
    stopifnot(length(formula <- as.formula(formula)) == 3)#
#
    fr <- aclmeFrames(mc, formula, contrasts)  # model frame, X, etc.#
    FL <- aclmeFactorList(formula, fr, 0L, 0L) # flist, Zt, dims#
    # Warn on unused arguments#
    largs <- list(...)#
    if(length(largs))#
        warning("the following '...' arguments have  *not* been used: ",#
                sub("^list", "", deparse(largs, control=NULL)))#
    # Setup search control            #
    cv <- do.call(aclmeControl, control)#
    if (missing(verbose)) verbose <- cv$msVerbose#
    FL$dims["mxit"] <- cv$maxIter#
    FL$dims["mxfn"] <- cv$maxFN#
    # Create the output variable#
    result <- list(fr = fr, FL = FL, start = start, verbose = verbose)#
    if (doFit)#
    {#
        result <- do.call(acml_finalize, result)#
        result@call <- mc#
    }#
    result#
}
model <- acml(response ~ month*race + (1|genotype), data=GroupByTimeInteraction)
head(GroupByTimeInteraction)
sample <- subset(GroupByTimeInteraction, !is.na(genotype))
head(sample)
model <- acml(response ~ month*race*genotype + (1|patient), data=sample)
library(lme4)
model <- lmer(response ~ month*race*genotype + (1|patient), data=sample)
model
lmer(response ~ month*race*genotype + (month|patient), data=sample)
sqrt(26.69)
sqrt(0.4)
lmer(response ~ month*genotype + race+ (month|patient), data=sample)
formula <- response ~ month*genotype + race+ (month|patient)
data <- sample
acml <- function(   formula,#
                    data,#
                    sample.function,#
                    sample.cutpoints,#
                    sample.prob,#
                    sample.probi = NULL,#
                    control      = list(),#
                    start        = NULL,#
                    verbose      = FALSE,#
                    doFit        = TRUE,#
                    subset,#
                    na.action,#
                    offset,#
                    contrasts = NULL,#
                    ...)#
{#
    mc <- match.call()#
#
    stopifnot(length(formula <- as.formula(formula)) == 3)#
#
    fr <- aclmeFrames(mc, formula, contrasts)  # model frame, X, etc.#
#
    fr#
}
ac ml(response ~ month*genotype + race+ (month|patient), data=sample)
acml(response ~ month*genotype + race+ (month|patient), data=sample)
acml <- function(   formula,#
                    data,#
                    sample.function,#
                    sample.cutpoints,#
                    sample.prob,#
                    sample.probi = NULL,#
                    control      = list(),#
                    start        = NULL,#
                    verbose      = FALSE,#
                    doFit        = TRUE,#
                    subset,#
                    na.action,#
                    offset,#
                    contrasts = NULL,#
                    ...)#
{#
    mc <- match.call()#
#
    stopifnot(length(formula <- as.formula(formula)) == 3)#
#
    fr <- aclmeFrames(mc, formula, contrasts)  # model frame, X, etc.#
    FL <- aclmeFactorList(formula, fr, 0L, 0L) # flist, Zt, dims#
    FL#
}
acml(response ~ month*genotype + race+ (month|patient), data=sample)
acml <- function(   formula,#
                    data,#
                    sample.function,#
                    sample.cutpoints,#
                    sample.prob,#
                    sample.probi = NULL,#
                    control      = list(),#
                    start        = NULL,#
                    verbose      = FALSE,#
                    doFit        = TRUE,#
                    subset,#
                    na.action,#
                    offset,#
                    contrasts = NULL,#
                    ...)#
{#
    mc <- match.call()#
#
    stopifnot(length(formula <- as.formula(formula)) == 3)#
#
    fr <- aclmeFrames(mc, formula, contrasts)  # model frame, X, etc.#
    FL <- aclmeFactorList(formula, fr, 0L, 0L) # flist, Zt, dims#
    # Warn on unused arguments#
    largs <- list(...)#
    if(length(largs))#
        warning("the following '...' arguments have  *not* been used: ",#
                sub("^list", "", deparse(largs, control=NULL)))#
    # Setup search control            #
    cv <- do.call(aclmeControl, control)#
#
    cv#
}
acml(response ~ month*genotype + race+ (month|patient), data=sample)
acml <- function(   formula,#
                    data,#
                    sample.function,#
                    sample.cutpoints,#
                    sample.prob,#
                    sample.probi = NULL,#
                    control      = list(),#
                    start        = NULL,#
                    verbose      = FALSE,#
                    doFit        = TRUE,#
                    subset,#
                    na.action,#
                    offset,#
                    contrasts = NULL,#
                    ...)#
{#
    mc <- match.call()#
#
    stopifnot(length(formula <- as.formula(formula)) == 3)#
#
    fr <- aclmeFrames(mc, formula, contrasts)  # model frame, X, etc.#
    FL <- aclmeFactorList(formula, fr, 0L, 0L) # flist, Zt, dims#
    # Warn on unused arguments#
    largs <- list(...)#
    if(length(largs))#
        warning("the following '...' arguments have  *not* been used: ",#
                sub("^list", "", deparse(largs, control=NULL)))#
    # Setup search control            #
    cv <- do.call(aclmeControl, control)#
#
    if (missing(verbose)) verbose <- cv$msVerbose#
    FL$dims["mxit"] <- cv$maxIter#
    FL$dims["mxfn"] <- cv$maxFN#
    # Create the output variable#
    result <- list(fr = fr, FL = FL, start = start, verbose = verbose)#
    result#
}
acml(response ~ month*genotype + race+ (month|patient), data=sample)
result <- acml(response ~ month*genotype + race+ (month|patient), data=sample)
The main event#
## Linear Mixed-Effects in R with Ascertainment Correction#
###
acml <- function(   formula,#
                    data,#
                    sample.function,#
                    sample.cutpoints,#
                    sample.prob,#
                    sample.probi = NULL,#
                    control      = list(),#
                    start        = NULL,#
                    verbose      = FALSE,#
                    doFit        = TRUE,#
                    subset,#
                    na.action,#
                    offset,#
                    contrasts = NULL,#
                    ...)#
{#
    mc <- match.call()#
#
    stopifnot(length(formula <- as.formula(formula)) == 3)#
#
    fr <- aclmeFrames(mc, formula, contrasts)  # model frame, X, etc.#
    FL <- aclmeFactorList(formula, fr, 0L, 0L) # flist, Zt, dims#
    # Warn on unused arguments#
    largs <- list(...)#
    if(length(largs))#
        warning("the following '...' arguments have  *not* been used: ",#
                sub("^list", "", deparse(largs, control=NULL)))#
    # Setup search control            #
    cv <- do.call(aclmeControl, control)#
#
    if (missing(verbose)) verbose <- cv$msVerbose#
    FL$dims["mxit"] <- cv$maxIter#
    FL$dims["mxfn"] <- cv$maxFN#
    # Create the output variable#
    result <- list(fr = fr, FL = FL, start = start, verbose = verbose)#
#
    if (doFit)#
    {#
        result <- do.call(acml_finalize, result)#
        result@call <- mc#
    }#
    result#
}
?lmer
acml_finalize(result)
acml <- function(   formula,#
                    data,#
                    sample.function,#
                    sample.cutpoints,#
                    sample.prob,#
                    sample.probi = NULL,#
                    control      = list(),#
                    start        = NULL,#
                    verbose      = FALSE,#
                    doFit        = TRUE,#
                    subset,#
                    na.action,#
                    offset,#
                    contrasts = NULL,#
                    ...)#
{#
    mc <- match.call()
mc
}
mc <- acml(response ~ month*genotype + race+ (month|patient), data=sample)
mc
contrasts <- NULL
formula
fr <- aclmeFrames(mc, formula, contrasts)
fr
FL <- aclmeFactorList(formula, fr, 0L, 0L)
FL
s
str(fl)
str(fl)
str(FL)
str(fr)
fr$X
head(fr$Y)
head(fr$X)
head(FL$fr)
head(FL$Zt)
str(FL)
FL$trms[[2]]
FL[[1]]
FL[[1]][[2]]
FL[[2\]]
FL[[2]]
FL[[3]]
FL[[4]]
FL[[2]]
lmer
str(FL)
FL$trms
str(FL)
FL$trms[[2]]
FL$trms$Zt
str(FL$trms)
FL$trms[[1]]
FL$trms[[1]][[2]]
str(fr)
fr$Y
fr$X
head(fr$X)
str(fr$X)
str(fr)
fr$mf
head(fr$mf)
str(fr$mf)
head(fr$X)
head(fr$X, 02)
head(fr$X, 20)
fr$fixef
